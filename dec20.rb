#! /usr/bin/env ruby

require './intcode-v3.rb'
require './input.rb'

strs = get_input_str_arr(__FILE__)

maze = {}
chars = {}
strs.each.with_index do |line, y|
  line.split('').each.with_index do |ch, x|
    if ch == '.' || ch == '#'
      maze[[x, y]] = ch
    elsif ch != ' '
      chars[[x, y]] = ch
    end
  end
end

DIRS = [
  [-1, 0],
  [1, 0],
  [0, 1],
  [0, -1],
]

def neighbors_iter(pos, &block)
  x, y = pos
  DIRS.each do |dir|
    dx, dy = dir
    block.call([x + dx, y + dy], dir)
  end
end

portal_locs = {}
portals = {}

maze.each do |pos, ch|
  next if ch == '#'
  neighbors_iter(pos) do |neighbor_pos, dir|
    ch = chars[neighbor_pos]
    if chars.key?(neighbor_pos)
      x, y = neighbor_pos
      nx, ny = dir

      name = ch + chars[[x + nx, y + ny]]
      name = name.reverse if dir[0] < 0 || dir[1] < 0
      portal_locs[name] ||= []
      portal_locs[name] << pos
      portals[pos] = [dir, name]
    end
  end
end

$ENTRANCE = portal_locs.delete('AA')[0]
$EXIT = portal_locs.delete('ZZ')[0]

portals.delete($ENTRANCE)
portals.delete($EXIT)

# puts $ENTRANCE.inspect
# puts $EXIT.inspect

# puts portal_locs.inspect
# puts portals.inspect

def fill_in_dead_ends(maze)
  dead_ends = []

  maze.each do |pos, ch|
    next if pos == $entrance
    if ch == '.'
      wall_neighbors = 0
      DIRS.each do |dir|
        neighbor = [pos[0] + dir[0], pos[1] + dir[1]]
        wall_neighbors += 1 if maze[neighbor] == '#'
      end
      dead_ends << pos if wall_neighbors == 3
    end
  end

  while dead_end = dead_ends.pop
    maze[dead_end] = '#'

    DIRS.each do |dir|
      neighbor = [dead_end[0] + dir[0], dead_end[1] + dir[1]]
      next if maze[neighbor] != '.'

      wall_neighbors = 0
      DIRS.each do |neighbor_dir|
        n_neighbor = [neighbor[0] + neighbor_dir[0], neighbor[1] + neighbor_dir[1]]
        wall_neighbors += 1 if maze[n_neighbor] == '#'
      end
      dead_ends << neighbor if wall_neighbors == 3
    end
  end
end

fill_in_dead_ends(maze)
chars.each do |pos, _|
  maze[pos] = '#'
end

def print_maze(maze)
  x_max = maze.keys.map(&:first).max
  y_max = maze.keys.map(&:last).max

  (0..y_max).each do |y|
    (0..x_max).each do |x|
      pos = [x, y]
      if pos == $ENTRANCE
        print 'A'
      elsif pos == $EXIT
        print 'Z'
      else
        ch = maze[pos]
        print ch || ' '
      end
    end
    puts
  end
end

portal_pairs = {}

portal_locs.each do |name, poses|
  a = poses[0]
  b = poses[1]
  a_dir = portals[a][0]
  b_dir = portals[b][0]

  portal_pairs[[a, a_dir]] = b
  portal_pairs[[b, b_dir]] = a
end

MAX_DISTANCE = 9999999

def shortest_distances(maze, start, portal_pairs)
  distances = Hash.new {|h, k| h[k] = MAX_DISTANCE}
  distances[start] = 0

  to_consider = [start]

  while curr = to_consider.pop
    curr_distance = distances[curr]

    neighbors_iter(curr) do |neighbor, dir|
      if portal_pairs[[curr, dir]]
        neighbor = portal_pairs[[curr, dir]]
        # puts "Neighbor from #{curr} to #{dir} is a portal to #{neighbor}"
      end

      next if maze[neighbor] == '#' || maze[neighbor] == ' '

      if distances[neighbor] > curr_distance + 1
        distances[neighbor] = curr_distance + 1
        # puts "Can get to #{neighbor} from #{curr} moving in #{dir} in #{curr_distance + 1}"
        to_consider << neighbor
      end
    end
  end

  distances
end


# Part 1
puts shortest_distances(maze, $ENTRANCE, portal_pairs)[$EXIT]

$MAX_X = maze.keys.map(&:first).max
$MAX_Y = maze.keys.map(&:last).max

# puts $MAX_X
# puts $MAX_Y

def interior_portal?(portal_loc)
  x, y = portal_loc
  2 < x && x < $MAX_X - 2 && 2 < y && y < $MAX_Y - 2
end

def calculate_neighbors(maze, portal_pairs)
  neighbors = {}

  (portal_pairs.keys.map(&:first) + [$ENTRANCE, $EXIT]).each do |start|
    distances = Hash.new {|h, k| h[k] = MAX_DISTANCE}
    distances[start] = 0

    to_consider = [start]

    while curr = to_consider.pop
      curr_distance = distances[curr]

      neighbors_iter(curr) do |neighbor, dir|
        next if maze[neighbor] == '#' || maze[neighbor] == ' '

        if distances[neighbor] > curr_distance + 1
          distances[neighbor] = curr_distance + 1
          # puts "Can get to #{neighbor} from #{curr} moving in #{dir} in #{curr_distance + 1}"
          to_consider << neighbor
        end
      end
    end

    neighbors[start] = []
    distances.each do |pos, distance|
      next if pos == start
      if pos == $ENTRANCE || pos == $EXIT
        neighbors[start] << [pos, distance, 0]
      else
        portal_loc = DIRS.map {|dir| portal_pairs[[pos, dir]]}.compact.first
        if portal_loc
          delta = interior_portal?(pos) ? 1 : -1
          # puts "Delta from #{start} to #{portal_loc} (via #{pos}) is #{delta}"
          neighbors[start] << [portal_loc, distance + 1, delta]
        end
      end
    end
  end

  neighbors
end

graph = calculate_neighbors(maze, portal_pairs)

# graph.each do |pos, neighbors|
#   puts "Starting at #{pos}..."
#   neighbors.each do |neighbor, distance, dl|
#     puts "  ... you can reach #{neighbor} in #{distance} +/- #{dl} levels"
#   end
# end

def shortest_distances_with_levels(graph, start, portals)
  distances = Hash.new {|h, k| h[k] = MAX_DISTANCE}
  distances[start] = 0

  to_consider = [start]

  while to_consider.any?
    to_consider.sort_by!(&:last)
    curr = to_consider.shift

    curr_distance = distances[curr]
    curr_pos, level = curr

    graph[curr_pos].each do |neighbor, distance, dl|
      new_level = level + dl

      # Can't use exterior portals on first level
      if level == 0 && dl < 0
        # puts "Can't go to #{neighbor} at level #{new_level} from #{curr_pos} on level #{level} because can't use exterior portals on level 0"
        next
      end
      # Can't use AA and ZZ on inner levels
      if level > 0 && dl == 0
        # puts "Can't go to #{neighbor} at level #{new_level} from #{curr_pos} on level #{level} because can't use AA && ZZ on inner levels."
        next
      end

      if distances[[neighbor, new_level]] > curr_distance + distance
        distances[[neighbor, new_level]] = curr_distance + distance
        # puts "Can get to #{neighbor} (#{portals[neighbor]&.[](1)}) at level #{new_level} from #{curr_pos} (#{portals[curr_pos]&.[](1)}) on level #{level} in #{curr_distance + distance}"
        puts curr_distance + distance if neighbor == $EXIT
        to_consider << [neighbor, new_level]
      end
    end
  end

  distances
end

puts "Part 2 (Doesn't terminate)"
# print_maze(maze)
puts shortest_distances_with_levels(graph, [$ENTRANCE, 0], portals)[[$EXIT, 0]]

__END__
                                         U     I     L           T     D     G                                             
                                         T     Z     X           A     Z     G                                             
  #######################################.#####.#####.###########.#####.#####.###########################################  
  #...#.....#.......#.#.#...#.#.#.#.....#...#.....#.......#.........#.......#.#...#.............#...#...#...........#...#  
  ###.###.#######.###.#.#.###.#.#.###.#.###.#.#.#######.#####.#.###.#####.###.###.#.###############.#.#####.###.#######.#  
  #.....#...........................#.#.....#.#...#.....#.....#.#.#.#.......#.#.#.......#.#.....#.....#...#.#.#.#.#.....#  
  ###.###.#.#.#####.###.###.###.#####.#######.#####.#.###.#.#.###.#.#######.#.###.#.#####.###.###.#######.###.#.#.###.#.#  
  #.#...#.#.#.#.....#.#.#...#.........#.....#.....#.#.#.#.#.#...#...#.....#.#.....#.......#...#.#.#.....#.#...#...#...#.#  
  #.#.#############.#.#.###.#.#######.#.#.#.###.###.#.#.###.#######.#.###.#.#######.#########.#.#.#.#####.###.#.#.###.###  
  #.#.#.#.#.#.#.......#.#...#.#.........#.#.#...#.#.#...#...#...#...#...#.#.#...........................#.#.....#.......#  
  #.#.#.#.#.#.###.#.#.#####.###.#.###.###.###.#.#.#####.#######.###.#.#.#.#.#####.#####.###.#.###.#####.#.#.###########.#  
  #.....#...#.#.#.#.#.#.....#.#.#.#...#.....#.#.#.#...#.#.........#.#.#.#.....#.....#.....#.#.#.#...#.............#.#...#  
  ###.###.###.#.#############.###.#######.#####.#.#.###.###.#.#.#.#.#.#.#.###.###.#############.###.###.#.#.###.###.#####  
  #.........#...#.....#.........#.#.....#.....#.....#.....#.#.#.#...#.#.#...#.#...........#.......#...#.#.#.#.#.......#.#  
  ###.#######.#####.#####.#.###.#######.#.#.#####.#.###.###########.#.#.###.#####.#########.#########.#####.#.#.#######.#  
  #.#.#.#.....#...#...#...#...#.#.#.....#.#...#.#.#.#...#.#...#.#...#.#...#.#.#.#.#.#.#.#.#...#.#...#...#...#.#...#.....#  
  #.#.#.###.#.###.#.###########.#.#####.###.###.#.###.###.#.###.###.#.#######.#.#.#.#.#.#.#.###.#.#####.###.#.#.###.#####  
  #.#.....#.#.........#.#...#.......#.......#.......#.....#.....#.#.#...#...#.........#.........#.#.#.#.#.....#.#.#.....#  
  #.#.#########.#.#####.#.#.#####.###.###.#.#######.#.#.#####.#.#.#.###.###.#######.#####.#####.#.#.#.#####.#####.###.#.#  
  #.........#...#.#...#...#.....#.....#...#.....#...#.#...#.#.#.#.#.#.......#...#...#.#...#...............#...#...#.#.#.#  
  ###.###.#######.#.#.#########.#.###.#.###########.###.###.#.#.###.#.#.#.#.###.###.#.###.###.#.#.#.#.###########.#.###.#  
  #.....#...#.....#.#.#.#.........#...#.#...#.......#.#.#...#.#.....#.#.#.#.#.#.#.....#.....#.#.#.#.#...#...#.#...#.#...#  
  ###.###.#####.#.#.###.#############.#####.###.###.#.#.###.#.###.#.#.###.###.#.#.###.###.#.###.#########.###.###.#.#.#.#  
  #.....#.#.#.#.#.#.....#...#.#...#.#.#.#.......#...#...#...#...#.#.#...#.#.........#.#...#...#.#.......#.#.......#.#.#.#  
  ###.###.#.#.###.###.###.#.#.###.#.#.#.#########.#####.#.#.#.#.#####.#####.#.###.#####.#.#######.#######.###.#.###.#.###  
  #.....#.#...#...#.#.#.#.#...#.............#.#.....#...#.#.#.#.#.........#.#...#...#.#.#.........#.....#...#.#.........#  
  ###.#######.###.#.#.#.#####.#####.###.#.###.#.###.#.###.#.###.#####.#######.#.###.#.#.#######.#.#####.#.#####.#########  
  #.......#...#...#.#...#.....#.#.#.#...#.#.#...#...#.....#.#.....#.....#.#...#.#.............#.#...#...#...#.........#.#  
  #.#.###.###.#.#.#.###.#.###.#.#.#####.###.#######.#######.#.###.###.###.#######.###.###.#########.###.#.#####.###.###.#  
  #.#...#.#...#.#.......#.#.#.....#...#.#...#.........#.....#...#.#.......#.........#...#.....#.#.#.#.#.#.#.#.#...#.....#  
  #.###.###.#######.###.###.#.#####.###.#.#########.###.#####.#######.#.#######.###.#######.###.#.###.#.#.#.#.#.#########  
  #.#.......#...#.#.#.#.....#.....#...#.....#.#.....#...#.#.#.....#.#.#...#.#...#.......#.#.........#.........#...#...#.#  
  ###.#########.#.###.###.#.###.###.###.#####.###.#####.#.#.###.###.#.#####.#######.###.#.#####.#.###.###.#####.#.###.#.#  
  #...#.....#...........#.#...#...#.......#.........#.......#.......#...........#...#.........#.#.#.#.#...#...#.#.#.....#  
  ###.#.#######.#####.#####.###.#######.#########.#######.###.#######.###########.#######.#######.#.#####.#.#.#.###.#####  
  #.#...#...#.#.#.........#...#...#    D         Z       L   D       H           N      #...#...#.#.#.....#.#.#.....#.#.#  
  #.###.###.#.###.#####.#####.#.#.#    Z         O       M   Q       T           J      #######.###.#####.#.###.#####.#.#  
  #.......#.#.#.#.#.#.....#.#...#.#                                                     #...#.........#...#.......#.#.#.#  
  ###.#####.#.#.###.###.###.#.###.#                                                     #.#.#.###########.###.#####.#.#.#  
  #...#.....#...#...#.......#.#.#.#                                                   CQ..#.#.....#.#.#...........#.....#  
  ###.#####.#.#####.###.#.###.#.###                                                     #.###.###.#.#.#.#########.###.#.#  
  #.....................#.#.....#.#                                                     #...#.#.#.#.........#...#...#.#..OS
  ###.#.#.#.#.#.#######.#####.#.#.#                                                     #.###.#.#########.#.#.#.###.#.###  
  #...#.#.#.#.#...#.......#...#.#..OS                                                   #...#.#.#...#...#.#...#.#.#.#...#  
  #.#####.#.#######.#.#####.#.#.#.#                                                     #.###.#.###.###########.#.#.#.###  
  #.#.#...#.#.#.#.#.#.#.#.#.#.#...#                                                     #.........................#.....#  
  #.#.#######.#.#.###.###.###.#####                                                     #################################  
NJ..........#.....#.#.........#.#.#                                                     #...#...............#.#.....#...#  
  #############.###.###########.#.#                                                     #.#.#.#.#.###.###.###.###.#.#.#.#  
  #.......#.....#...........#......RW                                                   #.#...#.#.#.....#.......#.#...#.#  
  #.#####.#.###.#.#####.###.#.#.###                                                     #.#.#.###.###.###.#####.#.#.###.#  
  #...#...#...#.#.#.#...#.....#...#                                                     #.#.#.#.#.#...#...#.#...#.#...#..WL
  ###.#.###.###.#.###.###.#########                                                     #.#####.#####.#.###.#.#.#.#.###.#  
  #.#.#.....#...#...#.#.....#...#.#                                                   VO....#.#.......#.#...#.#...#.#.#.#  
  #.#.#.#.###.#####.###.#.###.###.#                                                     ###.#.#######.#.###.###.#####.###  
HD....#.#.#.#.........#.#.#.#.....#                                                     #.....#.#.#...#.#.#...#.#.....#.#  
  #########.###############.###.###                                                     ###.#.#.#.#######.#.#######.#.#.#  
  #...#.#.............#.......#...#                                                     #...#...#.#.....#.#...#.#...#....KW
  #.#.#.#.#.#.#.#.###.#####.#.#.#.#                                                     #########.#.#####.#.###.#.###.###  
  #.#...#.#.#.#.#.#.....#...#.#.#.#                                                   SB....#.#...#...#.#.....#.#...#...#  
  #.#.###.###.###.#####.#.###.#.#.#                                                     #.#.#.#.###.###.#.#.###.#.###.###  
  #.#.#.....#.#.#.#.#...#...#...#.#                                                     #.#...............#.......#...#.#  
  #.#.###.#.#.#.###.###.#.###.###.#                                                     #####.#.#.###.#.###.###########.#  
SN..#.....#.#.#.#.#.#.#...#.#.#....AR                                                   #.#...#.#.#...#...#.#.........#..HT
  #.#.#########.#.#.#.#####.#######                                                     #.#####.###.#.#######.#######.#.#  
  #.#.....#.......................#                                                     #...#.#.#...#...#.#.......#...#.#  
  #########.#######.#.#####.###.###                                                     ###.#.#.#########.#####.#.#.###.#  
VO..#.#.#.......#.#.#...#...#...#..TA                                                 XM....#.#.#.....#.......#.#.#.#....ZZ
  #.#.#.#######.#.#.#.#########.#.#                                                     #.###.#####.#####.#.#.###.#.###.#  
  #...........#...#.#...#.........#                                                     #.................#.#.....#.....#  
  ###.#.#.#######.#####.###.#.###.#                                                     #################################  
  #.#.#.#.........#.#.#.#...#...#.#                                                     #.......#...........#............LM
  #.###############.#.#############                                                     #.###.#.#.###.#.###.###.#########  
  #...................#...#...#.#.#                                                   IZ....#.#...#...#...#...#.......#.#  
  ###.#.#.###.#.#.###.###.#.#.#.#.#                                                     #.#######.###########.#.#####.#.#  
  #.#.#.#...#.#.#.#.....#...#.#....GG                                                   #.#.#.......#...#.....#.#.......#  
  #.###.#######.#.#####.#.###.#.###                                                     ###.###.###.###.#.#.#####.#####.#  
HR....#.....#.#.#.#...#.#.#.......#                                                     #.#...#.#.....#.#.#.......#.#...#  
  ###.###.#.#.#######.#.#.#.###.###                                                     #.###.#####.###.#########.#.#.#.#  
  #.......#.#.#.#.........#...#.#.#                                                     #.......#...#...........#...#.#.#  
  #.#.#.#.###.#.#########.#######.#                                                     #.#################.###.#######.#  
  #.#.#.#.#.#.#.#.#.........#......MJ                                                   #...#.........#...#...#.#.#...#.#  
  #########.#.#.#.#######.#####.###                                                     #.#####.#######.#####.#.#.#.#####  
OJ....#.#...........#.#...#.....#.#                                                   UT......#...#.#.#.#...#.#.#.....#..DQ
  #.###.#.#.#####.###.#####.###.#.#                                                     ###.###.###.#.#.#####.#.#.###.#.#  
AA........#...#.............#...#.#                                                     #.....................#...#.#...#  
  #########################.#####.#                                                     #########.#################.#.###  
  #.....................#.#.#...#.#                                                     #.....#...#...#.........#...#...#  
  ###.#.###.#.#.#.#####.#.#####.#.#                                                     #.###.###.#.#.#.#####.#.#.#.#####  
YX....#.#...#.#.#.#.#...#.#.#.#...#                                                     #...#...#.#.#.......#.#...#.#.#.#  
  #.#.###.#.###.###.#.###.#.#.###.#                                                     ###.#.#####.#.#######.#.###.#.#.#  
  #.#.#...#...#.#.....#.........#..KW                                                   #.#.#.....#.#...#.....#.#...#....XM
  ###.###.#####.###.#.#.###.#.###.#                                                     #.#.###.###.#######.#####.#.#.#.#  
  #...#.......#...#.#.....#.#.....#                                                   HR....#...........#.#.#.....#...#.#  
  #####.###.###.#######.#####.###.#                                                     #.#.###.#.###.###.#########.###.#  
  #.....#.....#.#.........#.....#.#                                                     #.#.#...#.#.........#.......#.#.#  
  #.#.#.###.#####.#.#.#.#####.#.###    L   W     H           S   H           Y     O    #.#####.###.#######.#######.#.#.#  
  #.#.#.#.....#...#.#.#.#.#...#.#.#    X   L     D           N   G           X     J    #...#...#.........#.#.#.#.....#.#  
  #.###.#.#.#####.###.###.#######.#####.###.#####.###########.###.###########.#####.#####.#######.#.#########.#.#.#.#.#.#  
  #...#.#.#...#.....#.......#.....#...........#.........#.#.#.#.#...#.........#.......#...#.......#.............#.#.#.#.#  
  #.#########.###.###.#.#########.#####.#############.###.#.#.#.#.#######.#.#.#.###.#.###.#####.#####.#.#.###.#.###.#.#.#  
  #.....#.#.#.#.....#.#.#.......#.#.#...#.#...#.......#.....#.#.#.....#...#.#.#.#...#...#...#.#.....#.#.#...#.#.#.#.#.#.#  
  #.#.###.#.#.###.###.#######.#.#.#.###.#.#.###.#.#.#.#.###.#.#.#.#######.#####.#############.#.#####.###.#.#.#.#.#.###.#  
  #.#.#.......#...#...#.#...#.#.............#.#.#.#.#.#.#...#...#...#.#...#.#.....#.#.#...#...#.#.....#...#.#.#.#...#...#  
  #.###.#.#####.#####.#.###.###############.#.#.#####.#.###.#.#####.#.#.###.###.###.#.#.###.#.#.#######.###.###.###.#####  
  #...#.#.#.#.....#.......#.......#.#.......#.......#.#...#.......#...#.#...#...............#.#.#...#.....#...#.#.......#  
  #.#.###.#.#.#####.#.#.###.###.#.#.###.###.#####.#.#.###.###########.#.#.#.###.###.#.#.#.#.#######.#.#.#########.#.###.#  
  #.#.#...#.....#...#.#...#.#.#.#.........#.#.....#.#.#.......#.#.#...#.#.#...#...#.#.#.#.#...#...#...#.........#.#...#.#  
  #.#####.###.###.###.#######.###.###.#.#######.#########.###.#.#.###.#.#.###.#######.#########.#####.#.#.#.#.###.#.#.#.#  
  #.#.....#.....#.#.....#...#.......#.#.....#.....#.#...#.#...#.......#...#.....#.#.#...#...........#.#.#.#.#...#.#.#.#.#  
  #.#.#.#.#####.#####.###.###.#.###.###.#####.###.#.###.###.###.###.###.###.###.#.#.#.###.###.###.#.#.###.#.#.#####.###.#  
  #.#.#.#...#...#.#.#.#...#.#.#.#.#.#.......#.#.....#.........#.#.....#.#.#.#...#.......#...#.#...#.#...#.#.#.....#.#.#.#  
  #.#.#.#.#.#####.#.#####.#.#####.###.#.#.#####.#####.#####.#######.#.###.#.#######.#.#.#.#######.#.###########.#####.#.#  
  #.#.#.#.#.#.....#...#.......#.....#.#.#.#...#.....#.#.......#.#.#.#...#.....#.#...#.#...#.#...#.#.#.....#.#.#...#.#...#  
  #.###.#.#######.###.#######.#####.###.###.###.#############.#.#.###.###.###.#.###.#######.#.#######.#.###.#.#####.###.#  
  #...#.#.#.............#.#...................#.....#.............#...#.#...#.#.#...#.....#.....#.....#.#.#.....#.#...#.#  
  ###.###########.#####.#.#######.#.###.###.#.###.#.#######.#.#.#####.#.#.###.#.#.#.###.###.#####.###.###.#.#####.#.###.#  
  #.......#.#.#.#.#.....#.#...#...#.#.....#.#.#...#.#.......#.#.#...#...#...#...#.#.#.......#.......#.#...#.#.#...#...#.#  
  #.#.#####.#.#.#####.#.#.#.###########.#######.#.#####.#####.#####.#.#######.#.###.#.#####.#.#.#.#######.#.#.#.###.#####  
  #.#.#.......#...#...#...#...#.#.........#.#...#.#...#.#.....#.....#.#.......#.#.........#...#.#...#.#.......#.........#  
  #.#######.#####.###.###.#.###.#######.#.#.#.#.###.#.#####.###.#.###.#####.#.#.#####.#####.#########.#.###.#.###.#####.#  
  #.#.........#.......#.............#.#.#...#.#.....#.#.....#...#.....#...#.#.#.#.#.#.#...#...#.......#.#...#.........#.#  
  #####.#.#######.#####.#.###.###.###.#.#.#####.#######.#.#.#.#.#####.#.#####.###.#.#.###.#####.#.###.#.###.#####.#.###.#  
  #.#...#.........#.#...#...#.#.#.#.#...#.#.......#.#...#.#.#.#.#...#.......#...#.............#.#.#.....#.....#...#...#.#  
  #.#.#####.#.#####.#.###.#####.#.#.#####.###.#.###.###.###.###.#.#.#########.#######.###.###.#.#####.#####.#######.#####  
  #...#.....#.#.......#...#.................#.#.#...#.#.#.....#...#...#.#.....#.#.#...#.....#.....#.#.#...#.......#.#.#.#  
  #####.#.#.#.#.#.#.###########.###.#.#.#######.###.#.#.#############.#.#####.#.#.###.#########.###.#####.#.#.#.#####.#.#  
  #.#.#.#.#.#.#.#.#.#.#.#.........#.#.#.#.#...#.......#...#.#...#.......#.#.#.#.....#...#.#.#...#.#.#.#.#.#.#.#.........#  
  #.#.#.###.#.###.###.#.#.#####.#.###.#.#.###.#######.###.#.#.#####.#####.#.#.#.#.###.#.#.#.###.#.#.#.#.#.###.###.###.###  
  #.....#...#.#...#.......#.....#...#.#.......#.......#.......#.....#.........#.#.....#.....#...............#...#.#.....#  
  #########################################.#.#.#############.###.#######.#####.#########################################  
                                           S R M             H   C       A     Z                                           
                                           B W J             G   Q       R     O                                           
